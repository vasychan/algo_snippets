==4138== Helgrind, a thread error detector
==4138== Copyright (C) 2007-2013, and GNU GPL'd, by OpenWorks LLP et al.
==4138== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==4138== Command: ./thred
==4138== 
==4138== ---Thread-Announcement------------------------------------------
==4138== 
==4138== Thread #2 was created
==4138==    at 0x595FC8E: clone (clone.S:74)
==4138==    by 0x56642B9: do_clone.constprop.3 (createthread.c:75)
==4138==    by 0x5665762: create_thread (createthread.c:245)
==4138==    by 0x5665762: pthread_create@@GLIBC_2.2.5 (pthread_create.c:606)
==4138==    by 0x4C2EEBD: pthread_create_WRK (hg_intercepts.c:270)
==4138==    by 0x4EF1A90: std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x4015FA: std::thread::thread<void (&)(int), int>(void (&)(int), int&&) (thread:138)
==4138==    by 0x400FFD: main (thread.cpp:33)
==4138== 
==4138== ---Thread-Announcement------------------------------------------
==4138== 
==4138== Thread #1 is the program's root thread
==4138== 
==4138== ----------------------------------------------------------------
==4138== 
==4138== Possible data race during read of size 8 at 0x604858 by thread #2
==4138== Locks held: none
==4138==    at 0x4ED226B: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x4ED26E6: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x400FAB: pause_thread(int) (thread.cpp:27)
==4138==    by 0x40289B: void std::_Bind_simple<void (*(int))(int)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (functional:1700)
==4138==    by 0x402796: std::_Bind_simple<void (*(int))(int)>::operator()() (functional:1688)
==4138==    by 0x402713: std::thread::_Impl<std::_Bind_simple<void (*(int))(int)> >::_M_run() (thread:115)
==4138==    by 0x4EF196F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==4138==    by 0x56650A3: start_thread (pthread_create.c:309)
==4138==    by 0x595FCCC: clone (clone.S:111)
==4138== 
==4138== This conflicts with a previous write of size 8 by thread #1
==4138== Locks held: none
==4138==    at 0x4ED22AD: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x4ED26E6: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x401044: main (thread.cpp:36)
==4138==  Address 0x604858 is 24 bytes inside data symbol "_ZSt4cout@@GLIBCXX_3.4"
==4138== 
==4138== ----------------------------------------------------------------
==4138== 
==4138== Possible data race during write of size 8 at 0x604858 by thread #2
==4138== Locks held: none
==4138==    at 0x4ED22AD: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x4ED26E6: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x400FAB: pause_thread(int) (thread.cpp:27)
==4138==    by 0x40289B: void std::_Bind_simple<void (*(int))(int)>::_M_invoke<0ul>(std::_Index_tuple<0ul>) (functional:1700)
==4138==    by 0x402796: std::_Bind_simple<void (*(int))(int)>::operator()() (functional:1688)
==4138==    by 0x402713: std::thread::_Impl<std::_Bind_simple<void (*(int))(int)> >::_M_run() (thread:115)
==4138==    by 0x4EF196F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==4138==    by 0x56650A3: start_thread (pthread_create.c:309)
==4138==    by 0x595FCCC: clone (clone.S:111)
==4138== 
==4138== This conflicts with a previous write of size 8 by thread #1
==4138== Locks held: none
==4138==    at 0x4ED22AD: std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x4ED26E6: std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20)
==4138==    by 0x401044: main (thread.cpp:36)
==4138==  Address 0x604858 is 24 bytes inside data symbol "_ZSt4cout@@GLIBCXX_3.4"
==4138== 
==4138== 
==4138== For counts of detected and suppressed errors, rerun with: -v
==4138== Use --history-level=approx or =none to gain increased speed, at
==4138== the cost of reduced accuracy of conflicting-access information
==4138== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 66 from 21)
